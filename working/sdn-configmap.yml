---
- name: Update Compute/Infra/Master ConfigMaps
  hosts: OSEv3
  tasks:
  - name: Login to OpenShift cluster
    command: "oc login -u system:admin --config={{ kube_conf }}"

  - name: oc get clusternetwork
    register: clsnet

  - name: Extract current node configuration
    tempfile:
      state: directory
    register: temp_dir
    when: "'networkpolicy' not in clsnet.stdout"
  
  - command: oc extract cm/node-config-compute -n openshift-node --to={{ temp_dir.path }}
    register: cm_path
    when: "'networkpolicy' not in clsnet.stdout"
 
  - yedit:
      src: "{{ cm_path.stdout }}"
      key: networkConfig.networkPluginName
      value: "redhat/openshift-ovs-networkpolicy" 
    when: "'networkpolicy' not in clsnet.stdout"

 #- yedit:
 #    src: "{{ cm_path.stdout }}"
 #    key: networkConfig.mtu
 #    value: 8951

  - name: Save modified node configuration
    command: oc create configmap node-config-compute-update --from-file {{ cm_path.stdout }} -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"
  
  - command: oc delete configmap node-config-compute -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"
  
  - command: oc create configmap node-config-compute --from-file {{ cm_path.stdout }} -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"
  
  - command: oc delete configmap node-config-compute-update -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - name: Extract infra node config map
    command: oc extract cm/node-config-infra -n openshift-node --to={{ temp_dir.path }}
    register: cm_path_infra
    when: "'networkpolicy' not in clsnet.stdout"

  - yedit:
      src: "{{ cm_path_infra.stdout }}"
      key: networkConfig.networkPluginName
      value: "redhat/openshift-ovs-networkpolicy"
    when: "'networkpolicy' not in clsnet.stdout"

  - name: Save modified infra node configuration
    command: oc create configmap node-config-infra-update --from-file {{ cm_path_infra.stdout }} -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - command: oc delete configmap node-config-infra -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - command: oc create configmap node-config-infra --from-file {{ cm_path_infra.stdout }} -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - command: oc delete configmap node-config-infra-update -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - name: Extract master node config map
    command: oc extract cm/node-config-master -n openshift-node --to={{ temp_dir.path }}
    register: cm_path_master
    when: "'networkpolicy' not in clsnet.stdout"

  - yedit:
      src: "{{ cm_path_master.stdout }}"
      key: networkConfig.networkPluginName
      value: "redhat/openshift-ovs-networkpolicy"
    when: "'networkpolicy' not in clsnet.stdout"

  - name: Save modified master node configuration
    command: oc create configmap node-config-master-update --from-file {{ cm_path_master.stdout }} -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - command: oc delete configmap node-config-master -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - command: oc create configmap node-config-master --from-file {{ cm_path_master.stdout }} -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"

  - command: oc delete configmap node-config-master-update -n openshift-node
    when: "'networkpolicy' not in clsnet.stdout"
